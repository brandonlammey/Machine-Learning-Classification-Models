library(readr)
big_bang_data <- read_csv("Desktop/big_bang_data.csv")
View(big_bang_data)
attach(big_bang_data)
library(psych)
install.packages("psych")
library("psych", lib.loc="~/anaconda3/lib/R/library")
library(psych)
describe(big_bang_data)
mean(distance)
mean(velocity)
MODEL_BIG_BANG <- lm(velocity ~ distance)
summary(MODEL_BIG_BANG)
#sum of squares error
sum(residuals(MODEL_BIG_BANG)^2)
MODEL_BIG_BANG <- lm(distance ~ velocity)
MODEL_BIG_BANG2 <- lm(distance ~ velocity)
#sum of squares error
sum(residuals(MODEL_BIG_BANG2)^2)
clear
sum(MODEL_BIG_BANG1$residuals^2)
#What is the intercept value for the Big Bang linear regression model
MODEL_BIG_BANG <- lm(velocity ~ distance)
summary(MODEL_BIG_BANG)
#sum of squares error
sum(residuals(MODEL_BIG_BANG)^2)
sum(MODEL_BIG_BANG$residuals^2)
anova(MODEL_BIG_BANG)
confint(MODEL_BIG_BANG)
-40.78+454.16(0.6)
predicted = -40.78+454.16(0.6)
predicted = -40.78+(454.16*0.6)
predicted = round(-40.78+(454.16*0.6))
#sum of squares error
anova(MODEL_BIG_BANG)
clear
#Giving 3 asterisk is stat. significant
anova(MODEL_BIG_BANG)
attach(big_bang_data)
library(psych)
# determine mean and sd
describe(big_bang_data)
#What is the intercept value for the Big Bang linear regression model
MODEL_BIG_BANG <- lm(velocity ~ distance)
summary(MODEL_BIG_BANG)
#sum of squares error
anova(MODEL_BIG_BANG)
#predicted velocity if the distance is 0.6
predicted = round(-40.78+(454.16*0.6))
#Giving 3 asterisk is stat. significant
anova(MODEL_BIG_BANG)
library(readr)
test_annotations_bbox_1_ <- read_csv("Desktop/test-annotations-bbox (1).csv")
View(test_annotations_bbox_1_)
names(test_annotations_bbox_1_)
SUNFLOWER<-subset(test_annotations_bbox_1_, LabelName == "/m/03h54r")
SUNFLOWER
SUNFLOWER<-subset(test_annotations_bbox_1_, LabelName == "/m/0d4v4")
SUNFLOWER
SUNFLOWER<-subset(test_annotations_bbox_1_, LabelName == "/m/0ftb8")
SUNFLOWER
options(max.print=999999)
SUNFLOWER
print(SUNFLOWER, nrow=150)
print(SUNFLOWER, nrow=114)
View(SUNFLOWER)
library(readr)
train_annotations_bbox_1_ <- read_csv("Desktop/train-annotations-bbox (1).csv")
View(train_annotations_bbox_1_)
SUNFLOWER2<-subset(train_annotations_bbox_1_, LabelName == "/m/0ftb8")
SUNFLOWER2
write.csv(SUNFLOWER, sunflower1.csv)
write.csv(SUNFLOWER, file = 'sunflower1.csv')
write.csv(SUNFLOWER2, file = 'sunflower2.csv')
SUNFLOWER_NO_REPEAT<-subset(SUNFLOWER2,!duplicated(ImageID))
SUNFLOWER_NO_REPEAT
SUNFLOWER_NO_REPEAT_NAMES<-SUNFLOWER_NO_REPEAT[,"ImageID"]
SUNFLOWER_NO_REPEAT_NAMES
write.csv(SUNFLOWER_NO_REPEAT_NAMES, file = 'sunflowerNoRep.csv')
View(SUNFLOWER2)
`train.annotations.bbox.(1)` <- read.csv("~/Desktop/train-annotations-bbox (1).csv")
View(`train.annotations.bbox.(1)`)
install.packages('e1071')
library(e1071)
install.packages('e1071')
library(e1071)
install.packages("e1071")
install.packages("e1071")
update.packages ()
install.packages("e1071")
library(e1071)
#Import Data
dataset = read_csv('medexpense_data.csv')
setwd("~/Desktop/Github/Machine-Learning-Classification-Models")
#Import Data
dataset = read_csv('medexpense_data.csv')
library("readr", lib.loc="~/anaconda3/lib/R/library")
#Import Data
library('readr')
dataset = read_csv('medexpense_data.csv')
attach('medexpense_data.csv')
attach(medexpense_data.csv)
library(readr)
medexpense_data <- read_csv("medexpense_data.csv")
View(medexpense_data)
datasetA = read('medexpense_data.csv')
datasetA = read(medexpense_data.csv)
attach(medexpense_data.csv)
attach('medexpense_data.csv')
library('readr')
dataset = read_csv('medexpense_data.csv')
#Change Smoke and Gender into binary values
SMOKER<-ifelse(dataset$smoker=="yes", 1, 0)
GENDER<-ifelse(dataset$gender=="male", 1, 0)
MODIFIED_DATASET <- data.frame(dataset$medical_expenses, dataset$bmi, dataset$age, GENDER, SMOKER)
install.packages("e1071")
#Import Data
library('readr')
dataset = read_csv('medexpense_data.csv')
#Change Smoke and Gender into binary values
SMOKER<-ifelse(dataset$smoker=="yes", 1, 0)
GENDER<-ifelse(dataset$gender=="male", 1, 0)
MODIFIED_DATASET <- data.frame(dataset$medical_expenses, dataset$bmi, dataset$age, GENDER, SMOKER)
#Splitting Data into training and test data (25/75)
install.packages('caTools')
library(caTools)
set.seed(123)
split= sample.split(MODIFIED_DATASET$GENDER, SplitRatio = 0.75)
training_set = subset(MODIFIED_DATASET, split==TRUE)
test_set = subset(MODIFIED_DATASET, split==FALSE)
# Feature Scaling
training_set[, 1:3] = scale(training_set[, 1:3])
test_set[, 1:3] = scale(test_set[, 1:3])
install.packages('e1071')
install.packages('rpart')
install.packages('randomForest')
library(e1071)
library(rpart)
library(randomForest)
